Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2020.1 (win64) Build 2902540 Wed May 27 19:54:49 MDT 2020
| Date         : Thu Apr  6 16:56:51 2023
| Host         : PC1012002888 running 64-bit major release  (build 9200)
| Command      : report_methodology -file nexys_hdmi_methodology_drc_routed.rpt -pb nexys_hdmi_methodology_drc_routed.pb -rpx nexys_hdmi_methodology_drc_routed.rpx
| Design       : nexys_hdmi
| Device       : xc7a200tsbg484-1
| Speed File   : -1
| Design State : Fully Routed
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Report Methodology

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
             Max violations: <unlimited>
             Violations found: 15
+-----------+------------------+------------------------------------------------+------------+
| Rule      | Severity         | Description                                    | Violations |
+-----------+------------------+------------------------------------------------+------------+
| TIMING-6  | Critical Warning | No common primary clock between related clocks | 4          |
| TIMING-16 | Warning          | Large setup violation                          | 10         |
| XDCB-5    | Warning          | Runtime inefficient way to find pin objects    | 1          |
+-----------+------------------+------------------------------------------------+------------+

2. REPORT DETAILS
-----------------
TIMING-6#1 Critical Warning
No common primary clock between related clocks  
The clocks clk_out1_clk_wiz_0 and PixelClkIO_1 are related (timed together) but they have no common primary clock. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks clk_out1_clk_wiz_0] -to [get_clocks PixelClkIO_1]
Related violations: <none>

TIMING-6#2 Critical Warning
No common primary clock between related clocks  
The clocks clk_out1_clk_wiz_0 and clk_out1_clk_wiz_0_1 are related (timed together) but they have no common primary clock. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks clk_out1_clk_wiz_0] -to [get_clocks clk_out1_clk_wiz_0_1]
Related violations: <none>

TIMING-6#3 Critical Warning
No common primary clock between related clocks  
The clocks clk_out1_clk_wiz_0_1 and PixelClkIO are related (timed together) but they have no common primary clock. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks clk_out1_clk_wiz_0_1] -to [get_clocks PixelClkIO]
Related violations: <none>

TIMING-6#4 Critical Warning
No common primary clock between related clocks  
The clocks clk_out1_clk_wiz_0_1 and clk_out1_clk_wiz_0 are related (timed together) but they have no common primary clock. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks clk_out1_clk_wiz_0_1] -to [get_clocks clk_out1_clk_wiz_0]
Related violations: <none>

TIMING-16#1 Warning
Large setup violation  
There is a large setup violation of -1.014 ns between integer_rotate_speed_reg[2]_rep__6/C (clocked by clk_out1_clk_wiz_0_1) and si_ad_change_buffer_reg[315]/D (clocked by clk_out1_clk_wiz_0). Large setup violations at the end of those stages might be difficult to fix during the post-placement implementation flow and could be the result of non-optimal XDC constraints or non-optimal design architecture
Related violations: <none>

TIMING-16#2 Warning
Large setup violation  
There is a large setup violation of -1.025 ns between integer_rotate_speed_reg[2]_rep__6/C (clocked by clk_out1_clk_wiz_0_1) and si_ad_change_buffer_reg[305]/D (clocked by clk_out1_clk_wiz_0). Large setup violations at the end of those stages might be difficult to fix during the post-placement implementation flow and could be the result of non-optimal XDC constraints or non-optimal design architecture
Related violations: <none>

TIMING-16#3 Warning
Large setup violation  
There is a large setup violation of -1.043 ns between integer_rotate_speed_reg[2]_rep__6/C (clocked by clk_out1_clk_wiz_0_1) and si_ad_change_buffer_reg[781]/D (clocked by clk_out1_clk_wiz_0). Large setup violations at the end of those stages might be difficult to fix during the post-placement implementation flow and could be the result of non-optimal XDC constraints or non-optimal design architecture
Related violations: <none>

TIMING-16#4 Warning
Large setup violation  
There is a large setup violation of -1.060 ns between integer_rotate_speed_reg[2]_rep__6/C (clocked by clk_out1_clk_wiz_0_1) and si_ad_change_buffer_reg[466]/D (clocked by clk_out1_clk_wiz_0). Large setup violations at the end of those stages might be difficult to fix during the post-placement implementation flow and could be the result of non-optimal XDC constraints or non-optimal design architecture
Related violations: <none>

TIMING-16#5 Warning
Large setup violation  
There is a large setup violation of -1.088 ns between integer_rotate_speed_reg[2]_rep__6/C (clocked by clk_out1_clk_wiz_0_1) and si_ad_change_buffer_reg[776]/D (clocked by clk_out1_clk_wiz_0). Large setup violations at the end of those stages might be difficult to fix during the post-placement implementation flow and could be the result of non-optimal XDC constraints or non-optimal design architecture
Related violations: <none>

TIMING-16#6 Warning
Large setup violation  
There is a large setup violation of -1.127 ns between integer_rotate_speed_reg[2]_rep__6/C (clocked by clk_out1_clk_wiz_0_1) and si_ad_change_buffer_reg[262]/D (clocked by clk_out1_clk_wiz_0). Large setup violations at the end of those stages might be difficult to fix during the post-placement implementation flow and could be the result of non-optimal XDC constraints or non-optimal design architecture
Related violations: <none>

TIMING-16#7 Warning
Large setup violation  
There is a large setup violation of -1.227 ns between integer_rotate_speed_reg[2]_rep__6/C (clocked by clk_out1_clk_wiz_0_1) and si_ad_change_buffer_reg[656]/D (clocked by clk_out1_clk_wiz_0). Large setup violations at the end of those stages might be difficult to fix during the post-placement implementation flow and could be the result of non-optimal XDC constraints or non-optimal design architecture
Related violations: <none>

TIMING-16#8 Warning
Large setup violation  
There is a large setup violation of -1.285 ns between integer_rotate_speed_reg[2]_rep__6/C (clocked by clk_out1_clk_wiz_0_1) and si_ad_change_buffer_reg[779]/D (clocked by clk_out1_clk_wiz_0). Large setup violations at the end of those stages might be difficult to fix during the post-placement implementation flow and could be the result of non-optimal XDC constraints or non-optimal design architecture
Related violations: <none>

TIMING-16#9 Warning
Large setup violation  
There is a large setup violation of -1.307 ns between integer_rotate_speed_reg[2]_rep__6/C (clocked by clk_out1_clk_wiz_0_1) and si_ad_change_buffer_reg[321]/D (clocked by clk_out1_clk_wiz_0). Large setup violations at the end of those stages might be difficult to fix during the post-placement implementation flow and could be the result of non-optimal XDC constraints or non-optimal design architecture
Related violations: <none>

TIMING-16#10 Warning
Large setup violation  
There is a large setup violation of -1.320 ns between integer_rotate_speed_reg[2]_rep__6/C (clocked by clk_out1_clk_wiz_0_1) and si_ad_change_buffer_reg[777]/D (clocked by clk_out1_clk_wiz_0). Large setup violations at the end of those stages might be difficult to fix during the post-placement implementation flow and could be the result of non-optimal XDC constraints or non-optimal design architecture
Related violations: <none>

XDCB-5#1 Warning
Runtime inefficient way to find pin objects  
The option '-through : [get_pins -filter {NAME =~ *SyncAsync*/oSyncStages_reg[0]/D} -hier]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '2' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: d:/flySimulation/flySimulation.srcs/sources_1/ip/rgb2dvi_0/src/rgb2dvi.xdc (Line: 5)
Related violations: <none>


